{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Kong with single node Cassandra cluster CloudFormation template. version v1.0",
  "Parameters": {
    "CassandraKeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances for Cassandra",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Default": ""
    },
    "CassandraVirtualiZationType": {
      "Description": "Cassandra intance Virtualization type",
      "Type": "String",
      "Default": "HVM",
      "AllowedValues": [
        "PV",
        "HVM"
      ]
    },
    "CassandraFleetSize": {
      "Description": "Number of nodes in cassandra cluster",
      "Type": "Number",
      "Default": "1",
      "MaxValue": "10",
      "MinValue": "1"
    },
    "CassandraAvailabilityZone": {
      "Description": "AZ for the Cassandra instance",
      "Type": "AWS::EC2::AvailabilityZone::Name"
    },
    "SSHLocation": {
      "Description": "The IP address range that can be used to SSH to the Kong and Cassandra EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0\/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x\/x."
    },
    "SSHLocation": {
      "Description": "The IP address range that can be used to SSH to the Kong and Cassandra EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0\/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x\/x."
    },
    "CassandraOpsCenterAccess": {
      "Description": "The IP address range that can access OpsCenter for Cassandra cluster management",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0\/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x\/x."
    },
    "KongProxyCidrIp": {
      "Description": "The IP address range that can be used to access the Kong admin server",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0\/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x\/x."
    },
    "KongAdminCidrIp": {
      "Description": "The IP address range that can be used to access the Kong proxy server",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0\/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x\/x."
    },
    "KongKeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances for Kong",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Default": ""
    },
    "KongFleetMaxSize": {
      "Description": "Max Number of Kong instances",
      "Type": "Number",
      "Default": "2",
      "MaxValue": "10",
      "MinValue": "1"
    },
    "KongFleetDesiredSize": {
      "Description": "Desired Number of Kong instances",
      "Type": "Number",
      "Default": "2",
      "MaxValue": "10",
      "MinValue": "1"
    },
    "KongInstanceType": {
      "Description": "Kong EC2 instance type",
      "Type": "String",
      "Default": "m3.medium",
      "AllowedValues": [
        "t1.micro",
        "t2.micro",
        "t2.small",
        "t2.medium",
        "m1.small",
        "m1.medium",
        "m1.large",
        "m1.xlarge",
        "m2.xlarge",
        "m2.2xlarge",
        "m2.4xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "c1.medium",
        "c1.xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "g2.2xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "hi1.4xlarge",
        "hs1.8xlarge",
        "cr1.8xlarge",
        "cc2.8xlarge",
        "cg1.4xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "CassandraInstanceType": {
      "Description": "Cassandra EC2 instance type, please chose supported type based on Virtualization type selected",
      "Type": "String",
      "Default": "m3.medium",
      "AllowedValues": [
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "c1.medium",
        "c1.xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "g2.2xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "hi1.4xlarge",
        "hs1.8xlarge",
        "cr1.8xlarge",
        "cc2.8xlarge",
        "cg1.4xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "CassandraClusterName": {
      "Default": "Cassandra Cluster",
      "Description": "Cassandra cluster name",
      "Type": "String"
    },
    "CassandraClusterVersion": {
      "Description": "Cassandra cluster version",
      "Type": "String",
      "Default": "Community",
      "AllowedValues": [
        "Community",
        "Enterprise"
      ]
    },
    "CassandraVersion": {
      "Description": "Cassandra version",
      "Type": "String",
      "Default": "2.2.0",
      "AllowedValues": [
        "2.1.8",
        "2.2.0"
      ]
    }
  },
  "Mappings": {
    "RegionKongAmiMap": {
      "us-east-1": {
        "KONGAMI": "ami-1ecae776"
      },
      "us-west-1": {
        "KONGAMI": "ami-d114f295"
      },
      "us-west-2": {
        "KONGAMI": "ami-e7527ed7"
      },
      "eu-west-1" : {
        "KONGAMI": "ami-a10897d6"
      },
      "ap-northeast-1" : {
         "KONGAMI": "ami-cbf90ecb"
      },
      "ap-southeast-1" : {
         "KONGAMI": "ami-68d8e93a"
      },
      "ap-southeast-2" : {
         "KONGAMI": "ami-fd9cecc7"
      },
      "sa-east-1" : {
         "KONGAMI" : "ami-b52890a8"
      }
    },
    "RegionCaasAmiMap": {
      "us-east-1": {
        "PV": "ami-f9a2b690",
        "HVM": "ami-ada2b6c4"
      },
      "us-west-1": {
        "PV": "ami-32f7c977",
        "HVM": "ami-3cf7c979"
      },
      "us-west-2": {
        "PV": "ami-16ff9626",
        "HVM": "ami-1cff962c"
      },
      "eu-west-1" : {
        "PV": "ami-8932ccfe",
        "HVM": "ami-7f33cd08"
      },
      "ap-northeast-1" : {
        "PV": "ami-6b4a376a",
        "HVM": "ami-714a3770"
      },
      "ap-southeast-1" : {
        "PV": "ami-8c7828de",
        "HVM": "ami-b47828e6"
      },
      "ap-southeast-2" : {
        "PV": "ami-57d54d6d",
        "HVM": "ami-55d54d6f"
      },
      "sa-east-1" : {
        "PV": "ami-15da7808",
        "HVM": "ami-1dda7800"
      }
    }
    
    
  },
  "Resources": {
    "KongGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "DependsOn" : "CassandraWaitCondition",
      "Properties": {
        "AvailabilityZones": {
          "Fn::GetAZs": ""
        },
        "LaunchConfigurationName": {
          "Ref": "KongLaunchConfig"
        },
        "MinSize": "1",
        "MaxSize": {
          "Ref": "KongFleetMaxSize"
        },
        "DesiredCapacity": {
          "Ref": "KongFleetDesiredSize"
        },
        "LoadBalancerNames": [
          {
            "Ref": "KongLoadBalancer"
          }
        ],
        "HealthCheckGracePeriod": "300",
        "Tags" : [
          { "Key" : "Name", "Value" : { "Ref" : "AWS::StackId" }, "PropagateAtLaunch" : "true" }
        ]
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MinInstancesInService": "1",
          "MaxBatchSize": "1",
          "PauseTime": "PT15M",
          "WaitOnResourceSignals": "true"
        }
      }
    },
    "KongWaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },
    "KongWaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "KongGroup",
      "Properties" : {
        "Handle"  : { "Ref" : "KongWaitHandle" },
        "Timeout" : "900",
        "Count"   : { "Ref" : "KongFleetDesiredSize" }
      }
    },
    "KongLaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "RegionKongAmiMap",
            {
              "Ref": "AWS::Region"
            },
            "KONGAMI"
          ]
        },
        "InstanceType": {
          "Ref": "KongInstanceType"
        },
        "KeyName": {
          "Ref": "KongKeyName"
        },
        "SecurityGroups": [
          {
            "Ref": "KongSecurityGroup"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!\/bin\/bash\n",
                "yum update -y aws-cfn-bootstrap\n",
                "echo '* soft nofile 65000' >> \/etc\/security\/limits.conf\n",
                "echo '* hard nofile 65000' >> \/etc\/security\/limits.conf\n",
                "wget https:\/\/github.com\/Mashape\/kong\/releases\/download\/0.4.1\/kong-0.4.1.el5.noarch.rpm\n",
                "yum install -y epel-release\n",
                "yum install -y kong-0.4.1.*.noarch.rpm --nogpgcheck\n",
                "cassandra_hosts=",
                {
                   "Fn::GetAtt": [
                     "CassandraWaitCondition",
                     "Data"
                   ]
                },
                "\n",
                "cassandra_hosts=$(echo $cassandra_hosts | awk -F\"{\" '{print $2}')\n",
                "cassandra_hosts=$(echo $cassandra_hosts | awk -F\"}\" '{print $1}')\n",
                "IFS=', ' read -a host_array <<< \"$cassandra_hosts\"\n",   
                "echo \"      hosts:\" > hosts\n",
                "for i in \"${host_array[@]}\"\n",
                "do\n",
                "   hostName=$(echo $i | awk -F\":\" '{print $1}')\n",
                "   echo -e \"        - $hostName\"  >> hosts\n",
                "done;\n",
                "sed -i $'\/hosts: \"localhost\"\/{r hosts\\n d}' \/etc\/kong\/kong.yml\n",
                "sleep 1m\n",
                "count=4\n",
                "until [ -f \"\/usr\/local\/kong\/kong.pid\" ]\n",
                "do\n",
                "   if [ $count -le 0 ]\n",
                "   then\n",
                "      /opt/aws/bin/cfn-signal -e 1 --reason \"Failed to start Kong\" '", { "Ref" : "KongWaitHandle" }, "'\n",
                "      echo \"failed to start kong, exiting...\" \n",
                "      exit\n",
                "   else\n",
                "      echo \"trying to start kong..\"\n",
                "      su -s \/bin\/sh -c \"\/usr\/local\/bin\/kong start\" ec2-user\n",
                "      count=\"$(($count-1))\"\n",
                "      sleep 15s\n",
                "   fi\n", 
                "done\n",
                "/opt/aws/bin/cfn-signal -e 0 --reason \"Kong setup completed\" '", { "Ref" : "KongWaitHandle" }, "'\n"   
              ]
            ]
          }
        }
      }
    },
    "KongLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "AvailabilityZones": {
          "Fn::GetAZs": ""
        },
        "CrossZone": "true",
        "Listeners": [
          {
            "LoadBalancerPort": "8000",
            "InstancePort": "8000",
            "Protocol": "HTTP"
          },
          {
            "LoadBalancerPort": "8001",
            "InstancePort": "8001",
            "Protocol": "HTTP"
          }
        ],
        "HealthCheck": {
          "Target": "TCP:8000",
          "HealthyThreshold": "3",
          "UnhealthyThreshold": "5",
          "Interval": "30",
          "Timeout": "5"
        }
      }
    },
    "KongSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable SSH access and HTTP access on the inbound port",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "8000",
            "ToPort": "8000",
            "CidrIp": {
              "Ref": "KongProxyCidrIp"
            }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8001",
            "ToPort": "8001",
            "CidrIp": {
              "Ref": "KongAdminCidrIp"
            }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Ref": "SSHLocation"
            }
          }
        ]
      }
    },
    "CassandraWaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },
    "CassandraWaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "CaasandraGroup",
      "Properties" : {
        "Handle"  : { "Ref" : "CassandraWaitHandle" },
        "Timeout" : "900",
        "Count"   : { "Ref" : "CassandraFleetSize" }
      }
    },
    "CaasandraGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "LaunchConfigurationName": {
          "Ref": "CassandraLaunchConfig"
        },
        "AvailabilityZones": [
          {
            "Ref": "CassandraAvailabilityZone"
          }
        ], 
        "MinSize": {
          "Ref": "CassandraFleetSize"
        },
        "MaxSize": {
          "Ref": "CassandraFleetSize"
        },
        "DesiredCapacity": {
          "Ref": "CassandraFleetSize"
        },
        "Tags" : [
          { "Key" : "Name", "Value" : { "Ref" : "AWS::StackId" }, "PropagateAtLaunch" : "true" }
        ]
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MinInstancesInService": "1",
          "MaxBatchSize": "1",
          "PauseTime": "PT15M",
          "WaitOnResourceSignals": "true"
        }
      }
    },
    "CassandraSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Cassandra SecurityGroup",
        "SecurityGroupIngress": [
          {"IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": {"Ref": "SSHLocation"}},
          {"IpProtocol": "tcp", "FromPort": "8888", "ToPort": "8888", "CidrIp": {"Ref": "CassandraOpsCenterAccess"}}
        ]
      }
    },
    "Ingress1024To65355": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupName": {"Ref": "CassandraSecurityGroup"}, "IpProtocol": "tcp", "FromPort": "1024", "ToPort": "65355", "SourceSecurityGroupId": {
          "Fn::GetAtt" : [ "CassandraSecurityGroup", "GroupId" ]
        }
      }
    },
    "Ingress7000": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupName": {"Ref": "CassandraSecurityGroup"}, "IpProtocol": "tcp", "FromPort": "7000", "ToPort": "7000", "SourceSecurityGroupId": {
          "Fn::GetAtt" : [ "CassandraSecurityGroup", "GroupId" ]
        }
      }
    },
    "Ingress7001": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupName": {"Ref": "CassandraSecurityGroup"}, "IpProtocol": "tcp", "FromPort": "7001", "ToPort": "7001", "SourceSecurityGroupId": {
          "Fn::GetAtt" : [ "CassandraSecurityGroup", "GroupId" ]
        }
      }
    },
    "Ingress7199": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupName": {"Ref": "CassandraSecurityGroup"}, "IpProtocol": "tcp", "FromPort": "7199", "ToPort": "7199", "SourceSecurityGroupId": {
          "Fn::GetAtt" : [ "CassandraSecurityGroup", "GroupId" ]
        }
      }
    },
    "Ingress61620": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupName": {"Ref": "CassandraSecurityGroup"}, "IpProtocol": "tcp", "FromPort": "61620", "ToPort": "61620", "SourceSecurityGroupId": {
          "Fn::GetAtt" : [ "CassandraSecurityGroup", "GroupId" ]
        }
      }
    },
    "Ingress61621": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupName": {"Ref": "CassandraSecurityGroup"}, "IpProtocol": "tcp", "FromPort": "61621", "ToPort": "61621", "SourceSecurityGroupId": {
          "Fn::GetAtt" : [ "CassandraSecurityGroup", "GroupId" ]
        }
      }
    },
    "Ingress9042": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupName": {"Ref": "CassandraSecurityGroup"}, "IpProtocol": "tcp", "FromPort": "9042", "ToPort": "9042", "SourceSecurityGroupId": {
          "Fn::GetAtt" : [ "KongSecurityGroup", "GroupId" ]
        }
      }
    },
    "Ingress9160": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupName": {"Ref": "CassandraSecurityGroup"}, "IpProtocol": "tcp", "FromPort": "9160", "ToPort": "9160", "SourceSecurityGroupId": {
          "Fn::GetAtt" : [ "KongSecurityGroup", "GroupId" ]
        }
      }
    },
    "CassandraLaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "RegionCaasAmiMap",
            {
              "Ref": "AWS::Region"
            },
            {
              "Ref": "CassandraVirtualiZationType"
            }
          ]
        },
        "InstanceType": {
          "Ref": "CassandraInstanceType"
        },
        "KeyName": {
          "Ref": "CassandraKeyName"
        },
        "SecurityGroups": [
          {
            "Ref": "CassandraSecurityGroup"
          }
        ],  
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [ 
                "#!\/bin\/bash\n",
                "apt-get -y install python-setuptools\n",
                "easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",
                "publicip=`curl http://169.254.169.254/latest/meta-data/public-ipv4`\n",
                "publichost=`curl http://169.254.169.254/latest/meta-data/public-hostname`\n",
                "cfn-signal -e 0 --data $publicip --id $publichost --reason \"Kong setup completed\" '", { "Ref" : "CassandraWaitHandle" }, "'\n",
                "--clustername ",{ "Ref": "CassandraClusterName" }, " --totalnodes ", { "Ref": "KongFleetDesiredSize" }," --version ", { "Ref": "CassandraClusterVersion" }," --release ",{"Ref": "CassandraVersion"},
                "\n"   
              ]
            ]
          }
        }
      }
    }
  },
  "Outputs": {
    "ProxyURL": {
      "Description": "Kong Proxy URL",
      "Value": {
        "Fn::Join": [
          "",
          [
            "http:\/\/",
            {
              "Fn::GetAtt": [
                "KongLoadBalancer",
                "DNSName"
              ]
            },
            ":8000"
          ]
        ]
      }
    },
    "AdminURL": {
      "Description": "Kong Admin URL",
      "Value": {
        "Fn::Join": [
          "",
          [
            "http:\/\/",
            {
              "Fn::GetAtt": [
                "KongLoadBalancer",
                "DNSName"
              ]
            },
            ":8001"
          ]
        ]
      }
    }
  }
}