{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Kong with Cassandra cluster demo CloudFormation template file.",
  "Parameters": {
    "KongKeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances for Kong",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern": "[-_ a-zA-Z0-9]*",
      "ConstraintDescription": "can contain only alphanumeric characters, spaces, dashes and underscores."
    },
    "CassandraKeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances for Cassandra",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern": "[-_ a-zA-Z0-9]*",
      "ConstraintDescription": "can contain only alphanumeric characters, spaces, dashes and underscores."
    },
    "CassandraSecurityGroupName": {
      "Description": "Name of an existing SecurityGroupfor Cassandra",
      "Type" : "List<AWS::EC2::SecurityGroup::GroupName>",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern": "[-_ a-zA-Z0-9]*",
      "ConstraintDescription": "can contain only alphanumeric characters, spaces, dashes and underscores."
    },
    "KongSecurityGroupName": {
      "Description": "Name of an existing SecurityGroupfor Cassandra",
      "Type" : "List<AWS::EC2::SecurityGroup::GroupName>",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern": "[-_ a-zA-Z0-9]*",
      "ConstraintDescription": "can contain only alphanumeric characters, spaces, dashes and underscores."
    },
    "AvailabilityZone" : {
      "Description" : "AZ for tha instances",
      "Type" : "AWS::EC2::AvailabilityZone::Name"
    },
    "SeedNodesHostAddress" : {
      "Description" : "comma separated DNS name of seed nodes.",
      "Type" : "String",
      "ConstraintDescription": "must be a valid host name"
    },
    "KongInstanceType": {
      "Description": "Kong EC2 instance type",
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": [
        "t1.micro",
        "t2.micro",
        "t2.small",
        "t2.medium",
        "m1.small",
        "m1.medium",
        "m1.large",
        "m1.xlarge",
        "m2.xlarge",
        "m2.2xlarge",
        "m2.4xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "c1.medium",
        "c1.xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "g2.2xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "hi1.4xlarge",
        "hs1.8xlarge",
        "cr1.8xlarge",
        "cc2.8xlarge",
        "cg1.4xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "CassandraInstanceType": {
      "Description": "Cassandra EC2 instance type",
      "Type": "String",
      "Default": "m3.medium",
      "AllowedValues": [
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "c1.medium",
        "c1.xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "g2.2xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "hi1.4xlarge",
        "hs1.8xlarge",
        "cr1.8xlarge",
        "cc2.8xlarge",
        "cg1.4xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "ClusterName" : {
      "Default" : "Cassandra Cluster",
      "Description" : "The name of this Cassandra cluster",
      "Type" : "String"
    },
    "ClusterVersion": {
      "Description": "Cassandra cluster version",
      "Type": "String",
      "Default": "Community",
      "AllowedValues": [
        "Community",
        "Enterprise"
      ],
      "ConstraintDescription": "Cassandra cluster version"
    },
    "CassandraVersion": {
      "Description": "Cassandra version",
      "Type": "String",
      "Default": "2.1.8",
      "ConstraintDescription": "Cassandra cluster version"
    }
  },
  "Mappings": {
    "RegionMap": {
      "us-east-1": { "KONGAMI": "ami-1ecae776", "CASSANDRAAMI" : "ami-ada2b6c4" },
      "us-west-1": { "KONGAMI": "ami-e7527ed7", "CASSANDRAAMI" : "ami-3cf7c979" },
      "us-west-2": { "KONGAMI": "ami-d114f295", "CASSANDRAAMI" : "ami-1cff962c" }
    }
  },
  "Conditions" : {
    "CreateCassandraInstance" : {"Fn::Equals" : [{"Ref" : "SeedNodesHostAddress"}, "" ]}
  },
  "Resources": {
    "CassandraCluster" : {
  	  "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AvailabilityZones" : {
          "Fn::GetAZs" : ""
        }, 
        "LaunchConfigurationName" : { "Ref" : "KongLaunchConfig" },
        "MinSize" : {"Ref" : "FleetSize"},
        "MaxSize" : {"Ref" : "FleetSize"}
      }
  	},
    "KongLaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": { "Fn::FindInMap": [ "RegionMap", { "Ref": "AWS::Region" }, "KONGAMI" ] },
        "AvailabilityZone" : { 
          "Ref": "AvailabilityZone" 
        },
        "InstanceType": {
          "Ref": "KongInstanceType"
        },
        "KeyName": {
          "Ref": "KongKeyName"
        },
        "SecurityGroups": { "Ref": "KongSecurityGroupName" },
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
            "#!/bin/bash\n",
            "yum update -y aws-cfn-bootstrap\n",
            "echo '* soft nofile 65000' >> /etc/security/limits.conf\n",
            "echo '* hard nofile 65000' >> /etc/security/limits.conf\n",
            "wget https://github.com/Mashape/kong/releases/download/0.4.0/kong-0.4.0.el5.noarch.rpm\n",
            "yum install -y epel-release\n",
            "yum install -y kong-0.4.0.*.noarch.rpm --nogpgcheck\n",
            "CASSANDRA_HOST=", {"Fn::If" :[ "CreateCassandraInstance",  { "Fn::GetAtt": [ "CassandraSeed", "PublicIp"]}, {"Ref" : "SeedNodesHostAddress" } ] } , "\n" ,
            "sed -i 's/localhost/'$CASSANDRA_HOST'/' /etc/kong/kong.yml\n",
            "sleep ", {"Fn::If" :[ "CreateCassandraInstance",  "5m" , "0s"  ] } , "\n" ,
            "su -s /bin/sh -c \"/usr/local/bin/kong start\" ec2-user\n"
            ]]}}
      }
    },
    "CassandraSeed": {
      "Type": "AWS::EC2::Instance",
      "Condition" : "CreateCassandraInstance",  
      "Properties": {
        "ImageId": { "Fn::FindInMap": [ "RegionMap", { "Ref": "AWS::Region" }, "CASSANDRAAMI" ] },
        "AvailabilityZone" : { 
          "Ref": "AvailabilityZone" 
         },
        "InstanceType": {
          "Ref": "CassandraInstanceType"
        },
        "KeyName": {
          "Ref": "CassandraKeyName"
        },
        "SecurityGroups": { "Ref": "CassandraSecurityGroupName" },
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
        	"--clustername ", { "Ref" : "ClusterName"}, " --totalnodes 1 --version ", { "Ref" : "ClusterVersion"}, " --release ", { "Ref" : "CassandraVersion"}, "\n"  
            ]]}}
      }
    }
  }
}