{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Kong CloudFormation template. version v1.0",
  "Parameters": {
    "KongKeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances for Kong",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Default": ""
    },
    "CassandraSeedNodes": {
      "Description": "Comma separated Cassandra seed nodes address with or without port ex. example.com:1234[, abc.com]",
      "Type": "CommaDelimitedList",
      "ConstraintDescription": "must be a valid host name, ex. example.com:1234, example.com, 123.123.123.123:1234 "
    },
    "KongFleetMaxSize": {
      "Description": "Max Number of Kong instances",
      "Type": "Number",
      "Default": "2",
      "MaxValue": "10",
      "MinValue": "1"
    },
    "KongFleetDesiredSize": {
      "Description": "Desired Number of Kong instances",
      "Type": "Number",
      "Default": "2",
      "MaxValue": "10",
      "MinValue": "1"
    },
    "KongSSHLocation": {
      "Description": "The IP address range that can be used to SSH to the Kong EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0\/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x\/x."
    },
    "KongProxyCidrIp": {
      "Description": "The IP address range that can be used to access the Kong proxy server",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0\/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x\/x."
    },
    "KongAdminCidrIp": {
      "Description": "The IP address range that can be used to access the Kong admin server",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0\/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x\/x."
    },
    "KongInstanceType": {
      "Description": "Kong EC2 instance type",
      "Type": "String",
      "Default": "c4.2xlarge",
      "AllowedValues": [
        "m1.small",
        "m1.medium",
        "m1.large",
        "m1.xlarge",
        "m2.xlarge",
        "m2.2xlarge",
        "m2.4xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "c1.medium",
        "c1.xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    }
  },
  "Mappings": {
    "RegionMap": {
      "us-east-1": {
        "KONGAMI": "ami-1ccae774"
      },
      "us-west-1": {
        "KONGAMI": "ami-d514f291"
      },
      "us-west-2": {
        "KONGAMI": "ami-ff527ecf"
      },
      "eu-west-1" : {
        "KONGAMI": "ami-bf0897c8"
      },
      "ap-northeast-1" : {
         "KONGAMI": "ami-27f90e27"
      },
      "ap-southeast-1" : {
         "KONGAMI": "ami-acd9e8fe"
      },
      "ap-southeast-2" : {
         "KONGAMI": "ami-ff9cecc5"
      },
      "sa-east-1" : {
         "KONGAMI" : "ami-bb2890a6"
      }
    }
  },
  "Conditions": {
    "CreateCassandraInstance": {
      "Fn::Equals": [
        {
          "Fn::Select": [
            "0",
            {
              "Ref": "CassandraSeedNodes"
            }
          ]
        },
        ""
      ]
    }
  },
  "Resources": {
    "KongGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": {
          "Fn::GetAZs": ""
        },
        "LaunchConfigurationName": {
          "Ref": "KongLaunchConfig"
        },
        "MinSize": "1",
        "MaxSize": {
          "Ref": "KongFleetMaxSize"
        },
        "DesiredCapacity": {
          "Ref": "KongFleetDesiredSize"
        },
        "LoadBalancerNames": [
          {
            "Ref": "KongLoadBalancer"
          }
        ],
        "HealthCheckGracePeriod": "300"
      },
      "CreationPolicy": {
        "ResourceSignal": {
          "Count": {
            "Ref": "KongFleetDesiredSize"
          },
          "Timeout": "PT15M"
        }
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MinInstancesInService": "1",
          "MaxBatchSize": "1",
          "PauseTime": "PT15M",
          "WaitOnResourceSignals": "true"
        }
      }
    },
    "KongLaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "KONGAMI"
          ]
        },
        "InstanceType": {
          "Ref": "KongInstanceType"
        },
        "KeyName": {
          "Ref": "KongKeyName"
        },
        "SecurityGroups": [
          {
            "Ref": "InstanceSecurityGroup"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!\/bin\/bash\n",
                "yum update -y aws-cfn-bootstrap\n",
                "echo '* soft nofile 65000' >> \/etc\/security\/limits.conf\n",
                "echo '* hard nofile 65000' >> \/etc\/security\/limits.conf\n",
                "wget https:\/\/github.com\/Mashape\/kong\/releases\/download\/0.4.1\/kong-0.4.1.el5.noarch.rpm\n",
                "yum install -y epel-release\n",
                "yum install -y kong-0.4.1.*.noarch.rpm --nogpgcheck\n",
                "CASSANDRA_HOSTS=(\"",
                {
                   "Fn::Join": [
                      "\" \"",
                      {
                        "Ref": "CassandraSeedNodes"
                      }
                    ]
                },
                "\")\n",
                "echo \"      hosts:\" > hosts\n",
                "for i in \"${CASSANDRA_HOSTS[@]}\"; do echo -e \"        - $i\"  >> hosts; done;\n",
                "sed -i $'\/hosts: \"localhost\"\/{r hosts\\n d}' \/etc\/kong\/kong.yml\n",
                "count=4\n",
                "until [ -f \"\/usr\/local\/kong\/kong.pid\" ] || [ $count -le 0 ]\n",
                "do\n",
                "   echo \"trying to start kong..\"\n",
                "   su -s \/bin\/sh -c \"\/usr\/local\/bin\/kong start\" ec2-user\n",
                "   count=\"$(($count-1))\"\n",
                "   sleep 15s\n",
                "done\n",
                "if [ -f \"\/usr\/local\/kong\/kong.pid\" ]\n",
				"then\n",
                "   \/opt\/aws\/bin\/cfn-signal -e 0 --stack ",{ "Ref": "AWS::StackName" }, " --resource KongGroup --region ", { "Ref": "AWS::Region" },"\n",
                "else\n",
                "   \/opt\/aws\/bin\/cfn-signal -e 1 -r \"failed to start kong\" --stack ",{ "Ref": "AWS::StackName" }, " --resource KongGroup --region ", { "Ref": "AWS::Region" },"\n",
                "fi\n" 
              ]
            ]
          }
        }
      }
    },
    "KongLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "AvailabilityZones": {
          "Fn::GetAZs": ""
        },
        "CrossZone": "true",
        "Listeners": [
          {
            "LoadBalancerPort": "8000",
            "InstancePort": "8000",
            "Protocol": "HTTP"
          },
          {
            "LoadBalancerPort": "8001",
            "InstancePort": "8001",
            "Protocol": "HTTP"
          }
        ],
        "HealthCheck": {
          "Target": "TCP:8000",
          "HealthyThreshold": "3",
          "UnhealthyThreshold": "5",
          "Interval": "30",
          "Timeout": "5"
        }
      }
    },
    "InstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable SSH access and HTTP access on the inbound port",
        "SecurityGroupIngress": [
         {
            "IpProtocol": "tcp",
            "FromPort": "8000",
            "ToPort": "8000",
            "CidrIp": {
              "Ref": "KongProxyCidrIp"
            }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8001",
            "ToPort": "8001",
            "CidrIp": {
              "Ref": "KongAdminCidrIp"
            }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Ref": "KongSSHLocation"
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "ProxyURL": {
      "Description": "Kong Proxy URL",
      "Value": {
        "Fn::Join": [
          "",
          [
            "http:\/\/",
            {
              "Fn::GetAtt": [
                "KongLoadBalancer",
                "DNSName"
              ]
            },
            ":8000"
          ]
        ]
      }
    },
    "AdminURL": {
      "Description": "Kong Admin URL",
      "Value": {
        "Fn::Join": [
          "",
          [
            "http:\/\/",
            {
              "Fn::GetAtt": [
                "KongLoadBalancer",
                "DNSName"
              ]
            },
            ":8001"
          ]
        ]
      }
    }
  }
}